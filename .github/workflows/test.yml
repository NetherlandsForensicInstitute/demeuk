name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run tests
      run: |
        tox
    - name: Create Release
      if: github.ref == 'refs/heads/master'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NEW_VERSION }}
        release_name: Release ${{ env.NEW_VERSION }}
        body: |
          Automated patch release
        draft: false
        prerelease: false
    - name: Install publishing dependencies
      if: github.ref == 'refs/heads/master'
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      if: github.ref == 'refs/heads/master'
      env:
        TWINE_USERNAME: fbda
        TWINE_PASSWORD: ${{ secrets.PYPI_FBDA_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
